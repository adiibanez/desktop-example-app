name: "Build binaries matrix"
on: [ "push", "pull_request" ]
env:
  OTP_GITHUB_URL: https://github.com/erlang/otp.git
  WXWIDGETS_REPO: https://github.com/wxWidgets/wxWidgets.git
  WXWIDGETS_VERSION: master
  DOCKER_BUILDKIT: 0

jobs:
  build:
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 90
    strategy:
      matrix:
        otp_version: [OTP-24.3.4.14]
        elixir:
          - { version: 1.16.3, variant: "-otp-24" }
        platform: [ubuntu-latest, macos-14, windows-latest]
        include:
          - platform: ubuntu-latest
            generic_platform: linux-x86
          - platform: macos-14
            generic_platform: macos
          - platform: windows-latest
            generic_platform: windows

    name: Build Erlang/OTP ( ${{ matrix.generic_platform }} )
    env:
      OTP_VERSION: ${{ matrix.otp_version }}
      ELIXIR_VERSION: ${{ matrix.elixir.version }}
      ELIXIR_VARIANT: ${{ matrix.elixir.variant }}

    steps:
      - uses: actions/checkout@v4 

      - name: Set platform output
        id: set-platform
        run: echo "::set-output name=PLATFORM::${{ matrix.generic_platform }}"

      - name: Determine cache name
        id: cache-name
        run: |
          echo "::set-output name=cache_name::${{ matrix.generic_platform }}-deps-${{ env.WXWIDGETS_VERSION }}-otp-${{ env.OTP_VERSION }}-${{ hashFiles('mix.lock', 'assets/package-lock.json') }}"

      - name: Restore Build Cache
        uses: actions/cache/restore@v3
        id: deps-cache
        with:
          path: |
            deps
            _build
            assets/node_modules
            ${{ steps.set-platform.outputs.PLATFORM == 'windows' && 'c:\\opt\\otp.exe' || '' }}
            ${{ steps.set-platform.outputs.PLATFORM == 'windows' && 'c:\\opt\\local64\\pgm\\wxWidgets-3.x.x' || '' }}
            ${{ steps.set-platform.outputs.PLATFORM == 'macos' && '~/.asdf' || '' }}
            ${{ steps.set-platform.outputs.PLATFORM == 'macos' && '~/projects/wxWidgets' || '' }}
            ${{ steps.set-platform.outputs.PLATFORM == 'macos' && '/usr/local/wxWidgets' || '' }}
          key: ${{ steps.cache-name.outputs.cache_name }}
          restore-keys: |
            ${{ matrix.generic_platform }}-deps-${{ env.WXWIDGETS_VERSION }}-otp-${{ env.OTP_VERSION }}-
            ${{ matrix.generic_platform }}-deps-${{ env.WXWIDGETS_VERSION }}-
            ${{ matrix.generic_platform }}-deps-


      - name: "Install asdf"
        uses: asdf-vm/actions/install@v3

      - name: "Prepare asdf"
        run: |
          echo "erlang ref:${{ env.OTP_VERSION }}" >> .tool-versions
          echo "elixir ${{ env.ELIXIR_VERSION }}${{ env.ELIXIR_VARIANT }}" >> .tool-versions
          echo "nodejs v18.7.0" >> .tool-versions

      - name: macOS Install build tools
        if: matrix.generic_platform == 'macos'
        shell: bash
        run: |
          echo 'eval "$(asdf env)"' >> ~/.profile
          source ~/.profile
          . $HOME/.asdf/asdf.sh
          export KERL_CONFIGURE_OPTIONS="--enable-parallel-configure --with-wxdir=`echo ~/projects/wxWidgets` --disable-jit --without-javac --disable-debug CXX='gcc -std=c++11'"
          asdf install
      
      - name: Install build tools
        if: matrix.generic_platform != 'macos'
        shell: bash
        run: |
          asdf install

      - name: "Compile and lint"
        shell: bash
        run: |
          . $HOME/.asdf/asdf.sh
          asdf install
          mix local.hex --force
          mix local.rebar --force
          mix deps.get
          cd assets && npm install

      - name: Windows Build Steps
        if: matrix.generic_platform == 'windows'
        uses: ./.github/actions/windows
        with:
          cache-hit: ${{ steps.deps-cache.outputs.cache-hit }}
          otp-version: ${{ env.OTP_VERSION }}
          wxwidgets-version: ${{ env.WXWIDGETS_VERSION }}
          wxwidgets-repo: ${{ env.WXWIDGETS_REPO }}
          elixir-version: ${{ env.ELIXIR_VERSION }}
          elixir-variant: ${{ env.ELIXIR_VARIANT }}
          win32-key-pass: ${{ secrets.WIN32_KEY_PASS }}

      - name: macOS Build Steps
        if: matrix.generic_platform == 'macos'
        uses: ./.github/actions/macos
        with:
          cache-hit: ${{ steps.deps-cache.outputs.cache-hit }}
          otp-version: ${{ env.OTP_VERSION }}
          wxwidgets-version: ${{ env.WXWIDGETS_VERSION }}
          wxwidgets-repo: ${{ env.WXWIDGETS_REPO }}
          elixir-version: ${{ env.ELIXIR_VERSION }}
          elixir-variant: ${{ env.ELIXIR_VARIANT }}
          macos-pem: ${{ secrets.MACOS_PEM }}

      - name: Linux Build Steps
        if: matrix.generic_platform == 'linux-x86'
        uses: ./.github/actions/linux
        with:
          cache-hit: ${{ steps.deps-cache.outputs.cache-hit }}
          otp-version: ${{ env.OTP_VERSION }}
          wxwidgets-version: ${{ env.WXWIDGETS_VERSION }}
          wxwidgets-repo: ${{ env.WXWIDGETS_REPO }}
          elixir-version: ${{ env.ELIXIR_VERSION }}
          elixir-variant: ${{ env.ELIXIR_VARIANT }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-actor: ${{ github.actor }}

      - name: Archive Installer
        if: matrix.generic_platform != 'linux-x86'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.generic_platform }}-Installer
          path: |
            _build/prod/*.${{ matrix.generic_platform == 'windows' && 'exe' || 'dmg' }}

      - name: Archive Installer Linux
        if: matrix.generic_platform == 'linux-x86'
        uses: actions/upload-artifact@v4
        with:
          name: Linux-Installer
          path: |
            ./*.run

      - name: Save Build Cache
        if: steps.deps-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: |
            deps
            _build
            assets/node_modules
            ${{ steps.set-platform.outputs.PLATFORM == 'windows' && 'c:\\opt\\otp.exe' || '' }}
            ${{ steps.set-platform.outputs.PLATFORM == 'windows' && 'c:\\opt\\local64\\pgm\\wxWidgets-3.x.x' || '' }}
            ${{ steps.set-platform.outputs.PLATFORM == 'macos' && '~/.asdf' || '' }}
            ${{ steps.set-platform.outputs.PLATFORM == 'macos' && '~/projects/wxWidgets' || '' }}
            ${{ steps.set-platform.outputs.PLATFORM == 'macos' && '/usr/local/wxWidgets' || '' }}
          key: ${{ steps.cache-name.outputs.cache_name }}
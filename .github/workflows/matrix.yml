name: "Build binaries matrix"

on: [ "push", "pull_request" ]

env:
  OTP_GITHUB_URL: https://github.com/erlang/otp.git
  WXWIDGETS_REPO: https://github.com/wxWidgets/wxWidgets.git
  WXWIDGETS_VERSION: master
  DOCKER_BUILDKIT: 0
  ACTIONS_STEP_DEBUG: true

jobs:
  build:
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 90
    
    strategy:
      fail-fast: true
      matrix:
        otp_version: [OTP-24.3.4.14]
        elixir:
          - { version: 1.16.3, variant: "-otp-24" }
        # https://github.com/actions/runner-images
        platform: [ windows-2022, ubuntu-latest, macos-14] # ubuntu-latest,macos-14,

    name: Build Erlang/OTP ( ${{ matrix.platform }} )
    env:
      OTP_VERSION: ${{ matrix.otp_version }}
      ELIXIR_VERSION: ${{ matrix.elixir.version }}
      ELIXIR_VARIANT: ${{ matrix.elixir.variant }}

    steps:
      - uses: actions/checkout@v4 # MUST be before ANY local actions and cache restores

      - name: Set platform output
        id: set-platform
        run: echo "::set-output name=PLATFORM::${{ matrix.platform }}"

      - name: ASDF Cache Key
        id: asdf-cache-key
        shell: bash
        run: echo "::set-output name=key::asdf-${{ matrix.platform }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-$(sha256sum ~/.asdf | awk '{print $1}')"

      - name: Print ASDF Cache Key
        run: |
          echo "ASDF Cache Key: ${{ steps.asdf-cache-key.outputs.key }}"

      # - name: Restore ASDF Cache
      #   id: asdf-cache-restore
      #   uses: actions/cache/restore@v3
      #   with:
      #     path: ~/.asdf
      #     key: ${{ steps.asdf-cache-key.outputs.key }}

      - name: Determine cache name
        id: cache-name
        run: |
          echo "::set-output name=cache_name::${{ matrix.platform }}-deps-${{ env.WXWIDGETS_VERSION }}-otp-${{ env.OTP_VERSION }}-${{ hashFiles('mix.lock', 'assets/package-lock.json') }}"

      - name: Print Build Cache Key
        run: |
          echo "Build Cache Key: ${{ steps.cache-name.outputs.cache_name }}"

      - name: Restore Build Cache
        uses: actions/cache/restore@v3
        id: deps-cache
        with:
          path: |
            deps
            _build
            assets/node_modules
            ${{ steps.set-platform.outputs.PLATFORM == 'windows' && 'c:\\opt\\otp.exe' || '' }}
            ${{ steps.set-platform.outputs.PLATFORM == 'windows' && 'c:\\opt\\local64\\pgm\\wxWidgets-3.x.x' || '' }}
            ${{ steps.set-platform.outputs.PLATFORM == 'macos' && '~/projects/wxWidgets' || '' }}
            ${{ steps.set-platform.outputs.PLATFORM == 'macos' && '/usr/local/wxWidgets' || '' }}
          key: ${{ steps.cache-name.outputs.cache_name }}
          restore-keys: |
            ${{ matrix.platform }}-deps-${{ env.WXWIDGETS_VERSION }}-otp-${{ env.OTP_VERSION }}-      
            ${{ matrix.platform }}-deps-${{ env.WXWIDGETS_VERSION }}-
            ${{ matrix.platform }}-deps-

      - name: Check if .asdf exists
        id: check_asdf
        shell: bash
        run: |
          if [ ! -d "$HOME/.asdf" ]; then
            echo "::set-output name=exists::false"
          else
            echo "::set-output name=exists::true"
          fi

      - name: "Install asdf"
        if: steps.check_asdf.outputs.exists == 'false'
        uses: asdf-vm/actions/setup@v3
      #- name: "Install plugins"
      #  uses: asdf-vm/actions/plugins-add@v3

      - name: "Prepare asdf"
        shell: bash
        run: |
          echo "erlang ref:${{ env.OTP_VERSION }}" >> .tool-versions
          echo "elixir ${{ env.ELIXIR_VERSION }}${{ env.ELIXIR_VARIANT }}" >> .tool-versions
          echo "nodejs v18.7.0" >> .tool-versions
          cat .tool-versions

      - name: "Install asdf for linux edgecase"
        if: startsWith(matrix.platform, 'ubuntu-') && steps.check_asdf.outputs.exists == 'false'
        uses: asdf-vm/actions/install@v3

      - name: Set up asdf build tools
        shell: bash
        run: |
          asdf plugin add erlang
          asdf plugin add elixir
          asdf plugin add nodejs
          asdf plugin list

      # - name: Common Build Steps
      #   uses: ./.github/actions/common
      #   with:
      #     otp-version: ${{ env.OTP_VERSION }}
      #     elixir-version: ${{ env.ELIXIR_VERSION }}
      #     elixir-variant: ${{ env.ELIXIR_VARIANT }}

      - name: Windows Build Steps
        if: startsWith(matrix.platform, 'windows-')
        uses: ./.github/actions/windows
        with:
          cache-hit: ${{ steps.deps-cache.outputs.cache-hit }}
          otp-version: ${{ env.OTP_VERSION }}
          wxwidgets-version: ${{ env.WXWIDGETS_VERSION }}
          wxwidgets-repo: ${{ env.WXWIDGETS_REPO }}
          elixir-version: ${{ env.ELIXIR_VERSION }}
          elixir-variant: ${{ env.ELIXIR_VARIANT }}
          win32-key-pass: ${{ secrets.WIN32_KEY_PASS }}

      - name: macOS Build Steps
        if: startsWith(matrix.platform, 'macos-')
        uses: ./.github/actions/macos
        with:
          cache-hit: ${{ steps.deps-cache.outputs.cache-hit }}
          otp-version: ${{ env.OTP_VERSION }}
          wxwidgets-version: ${{ env.WXWIDGETS_VERSION }}
          wxwidgets-repo: ${{ env.WXWIDGETS_REPO }}
          elixir-version: ${{ env.ELIXIR_VERSION }}
          elixir-variant: ${{ env.ELIXIR_VARIANT }}
          macos-pem: ${{ secrets.MACOS_PEM }}

      - name: Linux Build Steps
        if: startsWith(matrix.platform, 'ubuntu-')
        uses: ./.github/actions/linux
        with:
          cache-hit: ${{ steps.deps-cache.outputs.cache-hit }}
          otp-version: ${{ env.OTP_VERSION }}
          wxwidgets-version: ${{ env.WXWIDGETS_VERSION }}
          wxwidgets-repo: ${{ env.WXWIDGETS_REPO }}
          elixir-version: ${{ env.ELIXIR_VERSION }}
          elixir-variant: ${{ env.ELIXIR_VARIANT }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-actor: ${{ github.actor }}

      - name: Archive Installer
        if: ${{ !startsWith(matrix.platform, 'ubuntu-') }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-Installer
          path: |
            _build/prod/*.${{ matrix.platform == 'windows' && 'exe' || 'dmg' }}

      - name: Archive Installer Linux
        if: startsWith(matrix.platform, 'ubuntu-')
        uses: actions/upload-artifact@v4
        with:
          name: Linux-Installer
          path: |
            ./*.run

      - name: Save Build Cache
        if: steps.deps-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: |
            deps
            _build
            assets/node_modules
            ${{ steps.set-platform.outputs.PLATFORM == 'windows' && 'c:\\opt\\otp.exe' || '' }}
            ${{ steps.set-platform.outputs.PLATFORM == 'windows' && 'c:\\opt\\local64\\pgm\\wxWidgets-3.x.x' || '' }}
            ${{ steps.set-platform.outputs.PLATFORM == 'macos' && '~/projects/wxWidgets' || '' }}
            ${{ steps.set-platform.outputs.PLATFORM == 'macos' && '/usr/local/wxWidgets' || '' }}
          key: ${{ steps.cache-name.outputs.cache_name }}

      # - name: Save ASDF cache
      #   uses: actions/cache/save@v3
      #   with:
      #     path: ~/.asdf
      #     key: ${{ steps.asdf-cache-key.outputs.key }}